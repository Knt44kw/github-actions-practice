name: Deployment
on:
  push:
    branches:
      - section9
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load cache dependencies
        # 自分のリポジトリ内でcustom actionを定義している場合は、<ユーザ名>/<リポジトリ名>の規則で指定する
        # このときのvalue: Knt44kw/github-actions-practice
        # 定義していない場合は、custom actionのあるyamlのディレクトリパスを指定。ルートディレクトリはリポジトリ
        id: cached
        uses: ./.github/actions/cached-deps
        # custom actionのinputsを指定したい場合は以下のように行う
        with:
          caching: 'false'
      - name: Output Information
        run: echo "Cache used?  ${{ steps.cached.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-docker
        # uses: ./.github/actions/deploy-s3-javascript
        env:
          # aws-cli/sdk を使って、s3バケットに操作する際は、secretを用意する必要がある。
          # そのsecretは リポジトリレベルで github上に登録する 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: actions-github-test
          # ダウンロードしたartifactが保存されているディレクトリを指定
          dist-folder: ./dist
          # bucket-region: test-region regionがデフォルトとは異なるときは指定
      - name: Output Information
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"